Thoughs on antskell - the Haskell ant simulator.

* Overview
  Antskell is a simple simulator of the population of an ant colony
  written in Haskell. Ideally the output would be piped to some
  graphing library so the population could be graphed over time.
* Model basics
** Time step
   The colony will be updated once a day.
** One queen
   Colony will only have one queen, and as a first pass the queen will
   also be immortal.
*** Egg laying
    The number of eggs the queen will be able to lay will be
    determined by two factors:
    1. Amount of food the queen has received.
    2. Number of worker ants available to care for the eggs.
    3. Maximum amount of eggs the queen can possibly lay in a day.
    
    Later, the amount of nest space could be added as a limiting
    factor.
** Workers
   The following are characteristics of all workers:
*** Hunger/food level
    An individuals food level will decrease with time, and increases
    when the an is provided with food.
*** Age
    Age will determine when the ant moves from egg/larva to another
    role and when the ant dies off.
*** Role
    To start, there will only be two classes of worker ants.
**** Egg/Larva
     These are the eggs and larva that have not developed into ants
     that can assume one of the other roles, but still require
     food. Like the queen, food will need to be brought to them.
**** Nursery
     Responsible for tending the queen and her eggs. Food will need to
     brought to them.
**** Harvester
     Responsible for finding food and returning it to the next. They
     can eat at the food source, but it they will also return it to
     the nest for use by other ants in the nest.
** Nest
   The nest has three components:
   1. A list of workers
   2. A queen
   3. Food store.
*** Food store
    All the food collected by a harvester is placed in the food
    store. All the ants then eat from the store, with a priority being
    placed on the queen being fed first.
** Constants
   - Age limit :: The maximum life of a ant
   - Calorie burn :: Amount of food an ant uses in a day. This is the
                     same regardless of role.
* What happens in a day
  1. Ants are aged. Those that are past the age limit are removed from
     the list of worker ants.
  2. All the ants eat. The food in the nest food store is used to feed
     everyone in the nest. Need to think about the algorithm that
     decides who gets fed and how much.
  3. Any ants with a food level of 0 die, and are removed from the list.
  4. Check the queen, decide how may eggs the queen can lay. The
     number of eggs to lay is determined by:
     1. Food level of queen, if it is below a given level, no eggs are
        laid. This will depend in the size
     2. A check of the number of ants working the nursery is done. The
        nursery must not be "understaffed", if it is, a minimum number
        of eggs will be laid. The number increases with the staffing
        level.
  5. Decide on roles for the workers. Two factors will decide this
     - Number of eggs in the nursery.
     - Food level in the stockpile.

* Feeding
** Feeding the queen
   - Need to check and see if there is enough food in the stockpile
     to feed the queen.
   - If there is, then reduce the amount from the stockpile and
     increase the food level of the queen.
*** Edge cases
    - The food in the stockpile is less than the amount of food the
      queen wants.
** Feeding the workers
   - Sort the workers by their weight.
   - Start feeding the workers, starting with the first in the list.
     + Each fed worker requires that we check the stockpile for food,
       reduce the amount of food in the stockpile, and then feed the
       worker.
   - Stop feeding workers in the list when the food in stockpile runs
     out.

       
